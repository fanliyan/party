<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccu.data.course.TaskModelMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.ccu.model.course.TaskModel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="target_score" property="targetScore" jdbcType="INTEGER" />
    <result column="target_time" property="targetTime" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
    <resultMap id="withRole" type="cn.edu.ccu.model.course.TaskModel" extends="BaseResultMap">
        <association property="sRoleModel" javaType="cn.edu.ccu.model.student.SRoleModel">
            <id column="role_id" property="roleId"/>
            <result column="role_name" property="name"/>
        </association>
    </resultMap>
  <sql id="Base_Column_List" >
    id, name, start_time, end_time, target_score, target_time, create_time, last_modify_time, 
    role_id
  </sql>

    <select id="select" resultMap="withRole" parameterType="Map">
        SELECT
        id, t.name NAME, start_time, end_time, target_score, target_time, t.create_time, t.last_modify_time,
        t.role_id role_id,r.`name` role_name
        FROM task t JOIN s_role r ON t.`role_id`=r.`role_id`
        <where>
          <if test="name != null">
              and t.name like concat("%",#{name},"%")
          </if>
            <if test="roleId != null">
                and t.role_id = #{roleId}
            </if>
            <if test="startTime !=null">
                <![CDATA[
             AND (  `start_time` >= #{startTime,jdbcType=TIMESTAMP} or `start_time` is null)
                 ]]>
            </if>
            <if test="endTime !=null">
                <![CDATA[
            AND  (  `end_time` <= #{endTime,jdbcType=TIMESTAMP} or `end_time` is null)
                ]]>
            </if>
        </where>
        order by start_time DESC,end_time DESC
        <!-- split page -->
        <if test="rowStart != null and rowCount != null">
            LIMIT #{rowStart}, #{rowCount}
        </if>
    </select>
    <select id="count" resultType="int" parameterType="Map">
        select
        count(1)
        from task
        <where>
            <if test="name != null">
                and name like concat("%",#{name},"%")
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="startTime !=null">
                <![CDATA[
             AND (  `start_time` >= #{startTime,jdbcType=TIMESTAMP} or `start_time` is null)
                 ]]>
            </if>
            <if test="endTime !=null">
                <![CDATA[
            AND  (  `end_time` <= #{endTime,jdbcType=TIMESTAMP} or `end_time` is null)
                ]]>
            </if>
        </where>
    </select>
    <select id="selectByRole" resultMap="BaseResultMap" parameterType="Map">
        select
        <include refid="Base_Column_List" />
        from task
        <where>
            role_id = #{id}
            <if test="startTime !=null">
                <![CDATA[
             AND (  `start_time` >= #{startTime,jdbcType=TIMESTAMP} or `start_time` is null)
                 ]]>
            </if>
            <if test="endTime !=null">
                <![CDATA[
            AND  (  `end_time` <= #{endTime,jdbcType=TIMESTAMP} or `end_time` is null)
                ]]>
            </if>
            <if test="time !=null">
                <![CDATA[
            AND  (  `end_time` >= #{time,jdbcType=TIMESTAMP} or `end_time` is null)
            AND  (  `start_time` <= #{time,jdbcType=TIMESTAMP} or `start_time` is null)
                ]]>
            </if>
        </where>
    </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.ccu.model.course.TaskModel" >
    insert into task (id, name, start_time, 
      end_time, target_score, target_time, 
      create_time, last_modify_time, role_id
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{targetScore,jdbcType=INTEGER}, #{targetTime,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ccu.model.course.TaskModel" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="targetScore != null" >
        target_score,
      </if>
      <if test="targetTime != null" >
        target_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetScore != null" >
        #{targetScore,jdbcType=INTEGER},
      </if>
      <if test="targetTime != null" >
        #{targetTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccu.model.course.TaskModel" >
    update task
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetScore != null" >
        target_score = #{targetScore,jdbcType=INTEGER},
      </if>
      <if test="targetTime != null" >
        target_time = #{targetTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ccu.model.course.TaskModel" >
    update task
    set name = #{name,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      target_score = #{targetScore,jdbcType=INTEGER},
      target_time = #{targetTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>