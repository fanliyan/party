<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccu.data.user.UserModelMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.ccu.model.user.UserModel" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="login_fail_count" property="loginFailCount" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="branch_id" property="branchId" jdbcType="INTEGER" />
    <result column="department_type" property="departmentType" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, account, password, name, gender, birthday, last_login_ip, last_login_time, 
    login_count, login_fail_count, status, create_time, last_modify_time, branch_id, 
    department_type
  </sql>



    <select id="selectByKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where account = #{account}
        <if test="password != null">
            and password = #{password}
        </if>
    </select>

    <select id="selectByUserMap" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        <where>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
        </where>
        <!-- split page -->
        <if test="rowStart != null and rowCount != null">
            LIMIT #{rowStart}, #{rowCount}
        </if>
    </select>
    <select id="selectCount" parameterType="Map" resultType="int">
        select
        count(1)
        from user
        <where>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
        </where>
    </select>
    <select id="selectByIds" resultMap="BaseResultMap" parameterType="List" >
        select
        <include refid="Base_Column_List" />
        from user
        where user_id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.ccu.model.user.UserModel" >
    insert into user (user_id, account, password, 
      name, gender, birthday, 
      last_login_ip, last_login_time, login_count, 
      login_fail_count, status, create_time, 
      last_modify_time, branch_id, department_type
      )
    values (#{userId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=INTEGER}, 
      #{loginFailCount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastModifyTime,jdbcType=TIMESTAMP}, #{branchId,jdbcType=INTEGER}, #{departmentType,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ccu.model.user.UserModel" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="loginFailCount != null" >
        login_fail_count,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
      <if test="branchId != null" >
        branch_id,
      </if>
      <if test="departmentType != null" >
        department_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginFailCount != null" >
        #{loginFailCount,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="branchId != null" >
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="departmentType != null" >
        #{departmentType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccu.model.user.UserModel" >
    update user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginFailCount != null" >
        login_fail_count = #{loginFailCount,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="branchId != null" >
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="departmentType != null" >
        department_type = #{departmentType,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ccu.model.user.UserModel" >
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=INTEGER},
      login_fail_count = #{loginFailCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      branch_id = #{branchId,jdbcType=INTEGER},
      department_type = #{departmentType,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>