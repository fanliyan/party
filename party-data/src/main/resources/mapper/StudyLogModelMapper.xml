<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccu.data.study.StudyLogModelMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.ccu.model.study.StudyLogModel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="ware_id" property="wareId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="pauseTime" property="pausetime" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, course_id, ware_id, start_time, end_time, pauseTime, status, create_time, 
    last_modify_time
  </sql>

    <select id="selectIsInStudy" resultType="int">
        select
        count(1)
        from study_log
        where user_id = #{userId} and course_id = #{courseId} and ware_id = #{wareId}
        and (status != 400 and status != 304)
    </select>

    <select id="selectLogByCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from study_log
        where user_id = #{userId} and course_id = #{courseId} and ware_id = #{wareId}
        and status = #{code}
        <if test="startTime !=null">
            <![CDATA[
             AND   `start_time` >= #{startTime,jdbcType=TIMESTAMP}
                 ]]>
        </if>
        <if test="endTime !=null">
            <![CDATA[
            AND   `end_time` <= #{endTime,jdbcType=TIMESTAMP}
                ]]>
        </if>
    </select>

    <resultMap id="statisticRM" type="cn.edu.ccu.model.common.TableModel">
        <result column="name" property="name"/>
        <result column="count" property="count"/>
    </resultMap>

    <select id="studyCourseTop" parameterType="Map" resultMap="statisticRM">
        SELECT b.name NAME,COUNT(b.user_id) count FROM (
        SELECT DISTINCT
        sl.user_id,sl.course_id ,c.`course_name`,s.`name`
        FROM `study_log` sl
        LEFT JOIN course c ON c.`course_id`=sl.`course_id`
        LEFT JOIN student s ON s.`id`=sl.`user_id`
        WHERE sl.status = 304
        GROUP BY sl.course_id,sl.`user_id`
        HAVING COUNT(DISTINCT sl.`ware_id`)= (SELECT COUNT(1) FROM course_ware cw WHERE cw.`course_id` =sl.course_id)
         )AS b
         GROUP BY b.user_id
         ORDER BY count DESC
        <if test="rowStart != null and rowCount != null">
            LIMIT #{rowStart}, #{rowCount}
        </if>
    </select>

    <select id="watchCount" resultMap="statisticRM">
        SELECT c.`course_name` name,COUNT(sl.`id`) count
        FROM study_log sl
        LEFT JOIN course c ON c.`course_id`=sl.`course_id`

        WHERE sl.`start_time` IS NOT NULL
        GROUP BY sl.`course_id`
        order by count DESC
    </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from study_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from study_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.ccu.model.study.StudyLogModel" >
    insert into study_log (id, user_id, course_id, 
      ware_id, start_time, end_time, 
      pauseTime, status, create_time, 
      last_modify_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{wareId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{pausetime,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastModifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ccu.model.study.StudyLogModel" useGeneratedKeys="true" keyProperty="id" >
    insert into study_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="wareId != null" >
        ware_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="pausetime != null" >
        pauseTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="wareId != null" >
        #{wareId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pausetime != null" >
        #{pausetime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccu.model.study.StudyLogModel" >
    update study_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="wareId != null" >
        ware_id = #{wareId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pausetime != null" >
        pauseTime = #{pausetime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ccu.model.study.StudyLogModel" >
    update study_log
    set user_id = #{userId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      ware_id = #{wareId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      pauseTime = #{pausetime,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>