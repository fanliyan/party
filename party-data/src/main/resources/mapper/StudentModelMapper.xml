<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccu.data.student.StudentModelMapper">
    <resultMap id="BaseResultMap" type="cn.edu.ccu.model.student.StudentModel">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="BIT"/>
        <result column="birthday" property="birthday" jdbcType="TIMESTAMP"/>
        <result column="nation_id" property="nationId" jdbcType="INTEGER"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="login_count" property="loginCount" jdbcType="INTEGER"/>
        <result column="login_fail_count" property="loginFailCount" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP"/>
        <result column="area_code" property="areaCode" jdbcType="VARCHAR"/>
        <result column="student_code" property="studentCode" jdbcType="VARCHAR"/>
        <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="baseWithRole" type="cn.edu.ccu.model.student.StudentModel">
        <association property="sRoleModel" javaType="cn.edu.ccu.model.student.SRoleModel">
            <id column="role_id" property="roleId" />
            <result column="role_name" property="name" />
        </association>

        <association property="areaModel" javaType="cn.edu.ccu.model.common.AreaModel">
            <result column="area_code_1" property="code" />
            <result column="area_name" property="name" />
        </association>
        <association property="cityModel" javaType="cn.edu.ccu.model.common.CityModel">
            <result column="city_code" property="code" />
            <result column="city_name" property="name" />
        </association>
        <association property="provinceModel" javaType="cn.edu.ccu.model.common.ProvinceModel">
            <result column="province_code" property="code" />
            <result column="province_name" property="name" />
        </association>

        <association property="nationModel" javaType="cn.edu.ccu.model.common.NationModel">
            <id column="nation_id" property="id" />
            <result column="nation_name" property="nation" />
        </association>
    </resultMap>

    <sql id="Base_Column_List">
    id, account, password, name, gender, birthday, nation_id, last_login_time, login_count, 
    login_fail_count, status, create_time, last_modify_time, area_code, student_code, last_login_ip
  </sql>

    <select id="selectByKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where account = #{account,jdbcType=VARCHAR} AND password = #{password,jdbcType=VARCHAR}
    </select>

    <select id="selectByStudentCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where student_code = #{code,jdbcType=VARCHAR}
    </select>

    <select id="selectDetail"  resultMap="baseWithRole" parameterType="java.lang.Integer">
         SELECT
        s.id, s.account, s.name, s.gender, s.birthday, s.nation_id, s.last_login_time, s.status,s.area_code, s.student_code,
        sr.role_id,sr.name role_name,
        n.id nation_id,n.nation nation_name,
        a.code area_code_1,a.name area_name,
        c.code city_code,c.name city_name,
        p.code province_code,p.name province_name
        FROM student s LEFT JOIN `r_student_role` rsr ON rsr.`student_id`=s.`id`
        LEFT JOIN `s_role` sr ON sr.`role_id`=rsr.`role_id`
        LEFT JOIN `nation` n ON n.`id`=s.`nation_id`
        LEFT JOIN `area` a ON a.`code`=s.`area_code`
        LEFT JOIN `city` c ON c.`code`=a.`citycode`
        LEFT JOIN `province` p ON p.`code`=c.`provincecode`
        where s.id = #{id}
    </select>
    <select id="select" parameterType="Map" resultMap="baseWithRole">
        SELECT
        s.id, s.account, s.name, s.gender, s.birthday, s.nation_id, s.last_login_time, s.status,s.area_code, s.student_code,
        sr.role_id,sr.name role_name,
        n.id nation_id,n.nation nation_name,
        a.code area_code_1,a.name area_name,
        c.code city_code,c.name city_name,
        p.code province_code,p.name province_name
        FROM student s LEFT JOIN `r_student_role` rsr ON rsr.`student_id`=s.`id`
        LEFT JOIN `s_role` sr ON sr.`role_id`=rsr.`role_id`
        LEFT JOIN `nation` n ON n.`id`=s.`nation_id`
        LEFT JOIN `area` a ON a.`code`=s.`area_code`
        LEFT JOIN `city` c ON c.`code`=a.`citycode`
        LEFT JOIN `province` p ON p.`code`=c.`provincecode`

        <where>
            <if test="name != null">
              s.name like concat("%",#{name},"%")
            </if>
            <if test="userId != null">
                s.id = #{userId}
            </if>
            <if test="studentCode != null">
                s.student_code = #{studentCode}
            </if>
            <if test="roleId != null">
                sr.`role_id` = #{roleId}
            </if>
            <if test="gender != null">
                s.`gender` = #{gender}
            </if>
            <if test="areaCode != null">
                a.`area_code` = #{areaCode}
            </if>
            <if test="cityCode != null">
                sr.`city_code` = #{cityCode}
            </if>
            <if test="provinceCode != null">
                sr.`province_code` = #{provinceCode}
            </if>
        </where>
        order by student_code
        <if test="rowStart != null and rowCount != null">
            LIMIT #{rowStart}, #{rowCount}
        </if>
    </select>
    <select id="count" parameterType="Map" resultType="int">
        select
        count(1)
        from student
        <where>
            <if test="name != null">
                name like concat("%",#{name},"%")
            </if>
            <if test="userId != null">
                id = #{userId}
            </if>
            <if test="studentCode != null">
                student_code = #{studentCode}
            </if>
            <if test="roleId != null">
                sr.`role_id` = #{roleId}
            </if>
            <if test="gender != null">
                s.`gender` = #{gender}
            </if>
            <if test="areaCode != null">
                a.`area_code` = #{areaCode}
            </if>
            <if test="cityCode != null">
                sr.`city_code` = #{cityCode}
            </if>
            <if test="provinceCode != null">
                sr.`province_code` = #{provinceCode}
            </if>
        </where>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from student
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.edu.ccu.model.student.StudentModel">
    insert into student (id, account, password, 
      name, gender, birthday, 
      nation_id, last_login_time, login_count, 
      login_fail_count, status, create_time, 
      last_modify_time, area_code, student_code,
      last_login_ip)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, #{birthday,jdbcType=TIMESTAMP}, 
      #{nationId,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=INTEGER}, 
      #{loginFailCount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastModifyTime,jdbcType=TIMESTAMP}, #{areaCode,jdbcType=VARCHAR}, #{studentCode,jdbcType=VARCHAR},
      #{lastLoginIp,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.edu.ccu.model.student.StudentModel" useGeneratedKeys="true" keyProperty="id">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="nationId != null">
                nation_id,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="loginCount != null">
                login_count,
            </if>
            <if test="loginFailCount != null">
                login_fail_count,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastModifyTime != null">
                last_modify_time,
            </if>
            <if test="areaCode != null">
                area_code,
            </if>
            <if test="studentCode != null">
                student_code,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=BIT},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginCount != null">
                #{loginCount,jdbcType=INTEGER},
            </if>
            <if test="loginFailCount != null">
                #{loginFailCount,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyTime != null">
                #{lastModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="areaCode != null">
                #{areaCode,jdbcType=INTEGER},
            </if>
            <if test="studentCode != null">
                #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccu.model.student.StudentModel">
        update student
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=BIT},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="nationId != null">
                nation_id = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginCount != null">
                login_count = #{loginCount,jdbcType=INTEGER},
            </if>
            <if test="loginFailCount != null">
                login_fail_count = #{loginFailCount,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifyTime != null">
                last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="areaCode != null">
                area_code = #{areaCode,jdbcType=INTEGER},
            </if>
            <if test="studentCode != null">
                student_code = #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.ccu.model.student.StudentModel">
    update student
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      nation_id = #{nationId,jdbcType=INTEGER},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=INTEGER},
      login_fail_count = #{loginFailCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      area_code = #{areaCode,jdbcType=INTEGER},
      student_code = #{studentCode,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>