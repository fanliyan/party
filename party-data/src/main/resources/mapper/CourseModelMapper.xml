<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccu.data.course.CourseModelMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.ccu.model.course.CourseModel" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="teacher_description" property="teacherDescription" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="course_type" property="courseType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
    <resultMap id="baseWithType" type="cn.edu.ccu.model.course.CourseModel" extends="BaseResultMap">
        <association property="courseTypeModel" javaType="cn.edu.ccu.model.course.CourseTypeModel">
            <id column="type_id" property="id"/>
            <result column="type_name" property="name" />
        </association>
    </resultMap>
  <sql id="Base_Column_List" >
    course_id, course_name, description, teacher, teacher_description, score, time, course_type, create_time,
    last_modify_time
  </sql>
    <sql id="Base_Column_List_with_type" >
        course_id, course_name, description, teacher, teacher_description, score, time, course_type, c.create_time,
        c.last_modify_time,t.id type_id, t.name type_name
    </sql>

    <select id="select" resultMap="baseWithType" parameterType="Map">
        select
        <include refid="Base_Column_List_with_type" />
        from course c join course_type t ON c.course_type = t.id
        <where>
          <if test="ids != null">
              AND course_id IN
              <foreach collection="ids" item="id" open="(" separator="," close=")">
                  #{id}
              </foreach>
          </if>
          <if test="name != null">
             AND course_name like concat("%",#{name},"%")
          </if>
          <if test="courseType != null">
              courseType = #{courseType}
          </if>
        </where>
        <if test="rowStart != null and rowCount != null">
            LIMIT #{rowStart}, #{rowCount}
        </if>
    </select>
    <select id="count" resultType="int" parameterType="Map">
        select
       count(1)
        from course
        <where>
            <if test="ids != null">
                AND course_id IN
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="name != null">
                AND course_name like concat("%",#{name},"%")
            </if>
            <if test="courseType != null">
                courseType = #{courseType}
            </if>
        </where>
    </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.ccu.model.course.CourseModel" >
    insert into course (course_id, course_name, description, 
      teacher, teacher_description, score, time,
      course_type, create_time, last_modify_time
      )
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{teacher,jdbcType=VARCHAR}, #{teacherDescription}, #{score,jdbcType=DOUBLE}, #{time,jdbcType=VARCHAR},
      #{courseType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ccu.model.course.CourseModel" useGeneratedKeys="true" keyProperty="courseId" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="teacherDescription != null">
          teacher_description,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="courseType != null" >
        course_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="teacherDescription != null">
          #{teacherDescription},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccu.model.course.CourseModel" >
    update course
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="teacherDescription != null">
          teacher_description = #{teacherDescription},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ccu.model.course.CourseModel" >
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      teacher_description = #{teacherDescription},
      score = #{score,jdbcType=DOUBLE},
      time = #{time,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>