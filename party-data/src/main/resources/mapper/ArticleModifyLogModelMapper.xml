<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccu.data.article.ArticleModifyLogModelMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.ccu.model.article.ArticleModifyLogModel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="modify_type" property="modifyType" jdbcType="TINYINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.edu.ccu.model.article.ArticleModifyLogModel" extends="BaseResultMap" >
    <result column="modify_before_data" property="modifyBeforeData" jdbcType="LONGVARCHAR" />
  </resultMap>

    <select id="selectByArticle" resultMap="ResultMapWithBLOBs"  >
        select
        <include refid="Base_Column_List" />

        from article_modify_log
        where `article_id` = #{articleId,jdbcType=INTEGER}
        ORDER BY `create_time` DESC
        <!-- 分组 -->
        <if test="rowStart != null and rowCount != null">
            LIMIT #{rowStart}, #{rowCount}
        </if>
    </select>
    <select id="selectCountByArticle" resultType="java.lang.Integer" >
        select
        COUNT(1)
        from article_modify_log
        where `article_id` = #{articleId,jdbcType=INTEGER}
    </select>

  <sql id="Base_Column_List" >
    id, article_id, user_id, modify_type, description, create_time
  </sql>
  <sql id="Blob_Column_List" >
    modify_before_data
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_modify_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article_modify_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.ccu.model.article.ArticleModifyLogModel" >
    insert into article_modify_log (id, article_id, user_id, 
      modify_type, description, create_time, 
      modify_before_data)
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{modifyType,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyBeforeData,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ccu.model.article.ArticleModifyLogModel" >
    insert into article_modify_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="modifyType != null" >
        modify_type,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyBeforeData != null" >
        modify_before_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="modifyType != null" >
        #{modifyType,jdbcType=TINYINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBeforeData != null" >
        #{modifyBeforeData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccu.model.article.ArticleModifyLogModel" >
    update article_modify_log
    <set >
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="modifyType != null" >
        modify_type = #{modifyType,jdbcType=TINYINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBeforeData != null" >
        modify_before_data = #{modifyBeforeData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.ccu.model.article.ArticleModifyLogModel" >
    update article_modify_log
    set article_id = #{articleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      modify_type = #{modifyType,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_before_data = #{modifyBeforeData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ccu.model.article.ArticleModifyLogModel" >
    update article_modify_log
    set article_id = #{articleId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      modify_type = #{modifyType,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>